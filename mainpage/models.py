from django.contrib.auth import get_user_model
from django.db import models
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.utils.translation import gettext_lazy as _
from telegram.helpers import escape_markdown
from tinymce.models import HTMLField

from core.base_models import TimeStampAdbstractModel
from core.services.repositories import SiteRepository
from tg_bot import send_message_to_telegram
from tg_bot.utils import get_admins_chat_ids


class MainPageModel(models.Model):
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        max_length=1000,
        default="<title> | BlumenHorizon</title>",
    )
    json_ld_description = models.CharField(
        verbose_name="Description –≤ JSON LD –¥–ª—è OnlineStore",
        max_length=500,
        default="Blumen Horizon –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Ü–≤–µ—Ç–æ–≤ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –ë–µ—Ä–ª–∏–Ω–µ",
    )
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )

    class Meta:
        verbose_name = "1. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        verbose_name_plural = verbose_name

    def __str__(self):
        return "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"


class MainPageSliderImages(models.Model):
    image = models.ImageField(
        upload_to="mainpage-slider/",
        verbose_name="–§–æ—Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —Å–ª–∞–π–¥–µ",
        help_text="1000px/450px",
    )
    is_active = models.BooleanField(default=False, verbose_name="–ê–∫—Ç–∏–≤–Ω–æ–µ?")
    image_alt = models.CharField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏", max_length=200)

    class Meta:
        verbose_name = "2. –§–æ—Ç–æ —Å–ª–∞–π–¥–µ—Ä–∞ –≤–≤–µ—Ä—Ö—É –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
        verbose_name_plural = verbose_name

    def __str__(self):
        return f"{self.image} - {"–ê–∫—Ç–∏–≤–Ω–æ" if self.is_active else "–ù–µ–∞–∫—Ç–∏–≤–Ω–æ"}"


class IndividualOrder(models.Model):
    user = models.ForeignKey(
        get_user_model(),
        on_delete=models.CASCADE,
        related_name="individual_orders",
        verbose_name="–°–≤—è–∑–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç",
        null=True,
        blank=False,
    )
    first_name = models.CharField(max_length=40, verbose_name="–ò–º—è")
    contact_method = models.TextField(
        max_length=100,
        verbose_name="–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
    )
    recall_me = models.BooleanField(
        verbose_name="–†–∞–∑—Ä–µ—à–∏–ª –ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–≤–æ–Ω–∏—Ç—å –µ–º—É", default=False
    )

    class Meta:
        verbose_name = "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑"
        verbose_name_plural = "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã"

    def __str__(self):
        return f"{self.first_name}"


@receiver(post_save, sender=IndividualOrder)
def individual_order_created(sender, instance: IndividualOrder, created, **kwargs):
    country = SiteRepository.get_country()
    city = SiteRepository.get_city()
    if created:
        individual_order = instance
        text = (
            f"*–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑!* üéâ\n\n"
            f"*ID –≤–æ–ø—Ä–æ—Å–∞*: `{escape_markdown(str(individual_order.id))}`\n"
            f"*–°—Ç—Ä–∞–Ω–∞*: `{escape_markdown(country)}`\n"
            f"*–ì–æ—Ä–æ–¥*: `{escape_markdown(city)}`\n"
            f"*–ò–º—è*: `{escape_markdown(individual_order.first_name)}`\n"
            f"*–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏*: \n `{escape_markdown(individual_order.contact_method)}`\n\n"
            f"–í–ø–µ—Ä—ë–¥ –∑–∞ —Ä–∞–±–æ—Ç—É! üöÄ"
        )

        send_message_to_telegram(text, get_admins_chat_ids())


class MainPageSeoBlock(TimeStampAdbstractModel, models.Model):
    image = models.ImageField(
        verbose_name="–ö–∞—Ä—Ç–∏–Ω–∫–∞",
        upload_to="seoblock/",
        help_text="1000px/450px",
    )
    image_alt = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")

    class Meta:
        verbose_name = "3. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤–Ω–∏–∑—É –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
        verbose_name_plural = verbose_name

    def __str__(self):
        return f"{self.image} ...... {self.image_alt}"


class FAQPageModel(TimeStampAdbstractModel):
    image = models.ImageField(
        verbose_name="–ö–∞—Ä—Ç–∏–Ω–∫–∞",
        upload_to="seoblock/",
        default="defaults/no-image.webp",
        help_text="1000px/450px",
    )
    image_alt = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        max_length=1000,
        default="<title> | BlumenHorizon</title>",
    )

    def __str__(self):
        return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ß–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã¬ª"

    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ß–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã¬ª"
        verbose_name_plural = verbose_name


class AboutUsPageModel(TimeStampAdbstractModel):
    image = models.ImageField(
        verbose_name="–ö–∞—Ä—Ç–∏–Ω–∫–∞",
        upload_to="seoblock/",
        default="defaults/no-image.webp",
        help_text="1000px/450px",
    )
    image_alt = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        max_length=1000,
        default="<title> | BlumenHorizon</title>",
    )

    def __str__(self):
        return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–û –Ω–∞—Å¬ª"

    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–û –Ω–∞—Å¬ª"
        verbose_name_plural = verbose_name


class DeliveryPageModel(TimeStampAdbstractModel):
    image = models.ImageField(
        verbose_name="–ö–∞—Ä—Ç–∏–Ω–∫–∞",
        upload_to="seoblock/",
        default="defaults/no-image.webp",
        help_text="1000px/450px",
    )
    image_alt = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        max_length=1000,
        default="<title> | BlumenHorizon</title>",
    )

    def __str__(self):
        return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ —É—Å–ª–æ–≤–∏—è—Ö –¥–æ—Å—Ç–∞–≤–∫–∏"

    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–î–æ—Å—Ç–∞–≤–∫–∞¬ª"
        verbose_name_plural = verbose_name


class ContactsPageModel(TimeStampAdbstractModel):
    image = models.ImageField(
        verbose_name="–ö–∞—Ä—Ç–∏–Ω–∫–∞",
        upload_to="seoblock/",
        default="defaults/no-image.webp",
        help_text="1000px/450px",
    )
    image_alt = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        max_length=1000,
        default="<title> | BlumenHorizon</title>",
    )

    def __str__(self):
        return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"

    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª"
        verbose_name_plural = verbose_name


class ConditionsPageModelAbstract(models.Model):
    description = HTMLField(
        verbose_name=_("–û–ø–∏—Å–∞–Ω–∏–µ"),
    )
    meta_tags = models.TextField(
        verbose_name="–ú–µ—Ç–∞-—Ç–µ–≥–∏",
        default="<title> | BlumenHorizon</title>",
    )

    class Meta:
        abstract = True


class AGBPageModel(ConditionsPageModelAbstract, TimeStampAdbstractModel):
    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–£—Å–ª–æ–≤–∏—è –∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è¬ª"
        verbose_name_plural = verbose_name

    def __str__(self):
        return "–£—Å–ª–æ–≤–∏—è –∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è"


class PrivacyAndPolicyPageModel(ConditionsPageModelAbstract, TimeStampAdbstractModel):
    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–£—Å–ª–æ–≤–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö¬ª"
        verbose_name_plural = verbose_name

    def __str__(self):
        return "–£—Å–ª–æ–≤–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö"


class ImpressumPageModel(ConditionsPageModelAbstract, TimeStampAdbstractModel):
    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª"
        verbose_name_plural = verbose_name

    def __str__(self):
        return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª"


class ReturnPolicyPageModel(ConditionsPageModelAbstract, TimeStampAdbstractModel):
    class Meta:
        verbose_name = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞¬ª"
        verbose_name_plural = verbose_name

    def __str__(self):
        return "–£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞"
