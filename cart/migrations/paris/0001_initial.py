# Generated by Django 5.1.4 on 2025-03-14 11:02

import catalogue.models.services.abstract_models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalogue", "0064_alter_bouquet_tax_percent_alter_product_tax_percent"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Название банка"),
                ),
                (
                    "owner_name",
                    models.CharField(
                        max_length=255, verbose_name="Имя владельца счёта"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Номер счёта"
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
            ],
            options={
                "verbose_name": "5. Банковский счёт",
                "verbose_name_plural": "5. Банковские счета",
            },
        ),
        migrations.CreateModel(
            name="Florist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Название")),
                ("contact", models.TextField(verbose_name="Контакт флориста")),
                (
                    "address",
                    models.TextField(
                        blank=True, null=True, verbose_name="Адрес флориста"
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="НДС/Налоговый номер флориста",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание флориста"
                    ),
                ),
            ],
            options={
                "verbose_name": "3. Флорист",
                "verbose_name_plural": "3. Флористы",
            },
        ),
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "brutto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="С налогом",
                        max_digits=10,
                        null=True,
                        verbose_name="Себестоимость",
                    ),
                ),
                (
                    "netto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Без налога",
                        max_digits=10,
                        null=True,
                        verbose_name="Себестоимость",
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Налог",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Номер чека"
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="bills/%Y-%m-%d",
                        verbose_name="Фото/PDF-файл чека",
                    ),
                ),
                (
                    "is_paid",
                    models.BooleanField(default=True, verbose_name="Оплачено?"),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
                (
                    "account_paid_funds",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bills",
                        to="cart.bankaccount",
                        verbose_name="Банковский счёт с которого провели оплату",
                    ),
                ),
                (
                    "florist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bills",
                        to="cart.florist",
                        verbose_name="Флорист выдавший чек",
                    ),
                ),
            ],
            options={
                "verbose_name": "2. Чек",
                "verbose_name_plural": "2. Чеки",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_reported_to_tax",
                    models.BooleanField(
                        default=False,
                        help_text="Отметьте, если заказ был отправлен в налоговую",
                        verbose_name="Сообщено в налоговую",
                    ),
                ),
                (
                    "reporting_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата, когда заказ был отправлен в налоговую",
                        null=True,
                        verbose_name="Дата отправки в налоговую",
                    ),
                ),
                ("session_key", models.CharField(max_length=255)),
                (
                    "clarify_address",
                    models.BooleanField(default=False, verbose_name="Уточнить адрес?"),
                ),
                ("country", models.CharField(max_length=40, verbose_name="Страна")),
                ("city", models.CharField(max_length=40, verbose_name="Город")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, verbose_name="Способ связи с заказчиком"
                    ),
                ),
                (
                    "address_form",
                    models.CharField(
                        choices=[("Mr.", "Уважаемый"), ("Mrs.", "Уважаемая")],
                        default="Mr.",
                        max_length=20,
                        verbose_name="Форма обращения к заказчику",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="Имя заказчика")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="Почтовый индекс",
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Улица"
                    ),
                ),
                (
                    "building",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Здание"
                    ),
                ),
                (
                    "flat",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="Квартира/офис",
                    ),
                ),
                ("delivery_date", models.DateField(verbose_name="Дата доставки")),
                ("delivery_time", models.TimeField(verbose_name="Время доставки")),
                (
                    "delivery_vat_rate",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Процент НДС на доставку",
                    ),
                ),
                (
                    "delivery_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="С налогом",
                        max_digits=10,
                        null=True,
                        verbose_name="Стоимость доставки",
                    ),
                ),
                (
                    "message_card",
                    models.TextField(
                        blank=True,
                        max_length=10000,
                        null=True,
                        verbose_name="Записка к букету",
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        max_length=800,
                        null=True,
                        verbose_name="Инструкции к доставке",
                    ),
                ),
                (
                    "recipient_address_form",
                    models.CharField(
                        choices=[("Mr.", "Уважаемый"), ("Mrs.", "Уважаемая")],
                        default="Mr.",
                        max_length=20,
                        verbose_name="Форма обращения к получателю",
                    ),
                ),
                (
                    "recipient_name",
                    models.CharField(max_length=80, verbose_name="Имя получателя"),
                ),
                (
                    "recipient_phonenumber",
                    models.CharField(
                        max_length=30, verbose_name="Номер телефона получателя"
                    ),
                ),
                (
                    "is_recipient",
                    models.BooleanField(
                        default=False, verbose_name="Заказчик - получатель?"
                    ),
                ),
                (
                    "is_surprise",
                    models.BooleanField(
                        default=False, verbose_name="Доставка с сюрпризом?"
                    ),
                ),
                (
                    "is_agreement_accepted",
                    models.BooleanField(
                        default=False, verbose_name="Соглашение с AGB и Datenschutz"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        default=catalogue.models.services.abstract_models.generate_sku,
                        max_length=60,
                        verbose_name="Код заказа",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "В обработке"),
                            ("declined", "Возврат"),
                            ("awaiting_payment", "Ожидание оплаты"),
                            ("shipping", "В доставке"),
                            ("delivered", "Доставлен"),
                        ],
                        default="awaiting_payment",
                        max_length=20,
                        verbose_name="Статус заказа",
                    ),
                ),
                (
                    "sub_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Без налога",
                        max_digits=10,
                        verbose_name="Чистая стоимость",
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Стоимость налога",
                        max_digits=10,
                        verbose_name="Налоговая стоимость",
                    ),
                ),
                (
                    "payment_system_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Спросить у Виталика",
                        max_digits=10,
                        null=True,
                        verbose_name="Комиссия системы приёма платежей",
                    ),
                ),
                (
                    "grand_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="С налогом",
                        max_digits=10,
                        verbose_name="Итоговая стоимость",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        max_length=2, verbose_name="Язык пользователя на сайте"
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
                (
                    "bill",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="cart.bill",
                        verbose_name="Чек",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="earned_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Менеджер принёсший заказ",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "1. Заказ",
                "verbose_name_plural": "1. Заказы",
            },
        ),
        migrations.CreateModel(
            name="OrderBouquets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "discount",
                    models.IntegerField(
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Скидка на продукт",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена продукта"
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта cо скидкой",
                    ),
                ),
                (
                    "tax_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта с налогом",
                    ),
                ),
                (
                    "tax_price_discounted",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта со скидкой и налогом",
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Всего заплаченных налогов",
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="Количество продукта")),
                (
                    "supplier_paid_taxes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Всего заплаченных налогов за продукт у поставщика",
                    ),
                ),
                (
                    "supplier_vat_rate",
                    models.IntegerField(
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Ставка НДС от поставщика",
                    ),
                ),
                (
                    "supplier_paid_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Заплаченная себестоимость поставщику",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bouquets",
                        to="cart.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="catalogue.bouquet",
                        verbose_name="Букет",
                    ),
                ),
            ],
            options={
                "verbose_name": "Букет в заказе",
                "verbose_name_plural": "Букеты в заказе",
            },
        ),
        migrations.CreateModel(
            name="OrderCreditAdjustment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Сумма корректировки",
                        max_digits=10,
                        verbose_name="Сумма",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Опишите причину корректировки или дополнительные детали",
                        null=True,
                        verbose_name="Комментарий",
                    ),
                ),
                (
                    "external_reference",
                    models.CharField(
                        blank=True,
                        help_text="Ссылка на внешний источник или номер транзакции",
                        max_length=255,
                        null=True,
                        verbose_name="Внешняя ссылка",
                    ),
                ),
                (
                    "is_reported_to_tax",
                    models.BooleanField(
                        default=False,
                        help_text="Отметьте, если транзакция была отправлена в налоговую",
                        verbose_name="Сообщено в налоговую",
                    ),
                ),
                (
                    "reporting_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата, когда транзакция была отправлена в налоговую",
                        null=True,
                        verbose_name="Дата отправки в налоговую",
                    ),
                ),
                (
                    "issue_date",
                    models.DateTimeField(
                        help_text="Дата, когда была инициирована корректировка",
                        verbose_name="Дата инициации",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="Загрузите фото или PDF-файл, подтверждающий транзакцию",
                        null=True,
                        upload_to="order_adjustments/credit/%Y-%m-%d",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "receipt_date",
                    models.DateTimeField(
                        help_text="Дата, когда средства были зачислены на счет",
                        verbose_name="Дата поступления средств",
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Сумма налога, уплаченная клиентом в рамках этой корректировки",
                        max_digits=10,
                        verbose_name="Всего заплаченных налогов клиентом",
                    ),
                ),
                (
                    "account_received_funds",
                    models.ForeignKey(
                        help_text="Выберите банковский счёт, на который были зачислены средства",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders_credit_adjustments",
                        to="cart.bankaccount",
                        verbose_name="Банковский счёт на который поступили деньги",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Заказ, к которому относится корректировка",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="credit_adjustments",
                        to="cart.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Сотрудник, который обработал данную транзакцию",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обработано сотрудником",
                    ),
                ),
                (
                    "tax_percent",
                    models.ForeignKey(
                        default=1,
                        help_text="Выберите налоговую ставку, применимую к данной операции. Вычисляется после скидки.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders_credit_adjustments",
                        to="catalogue.taxpercent",
                        verbose_name="Налоговая ставка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Корректировка (начисление)",
                "verbose_name_plural": "Корректировки (начисления)",
            },
        ),
        migrations.CreateModel(
            name="OrderDebitAdjustment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Сумма корректировки",
                        max_digits=10,
                        verbose_name="Сумма",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Опишите причину корректировки или дополнительные детали",
                        null=True,
                        verbose_name="Комментарий",
                    ),
                ),
                (
                    "external_reference",
                    models.CharField(
                        blank=True,
                        help_text="Ссылка на внешний источник или номер транзакции",
                        max_length=255,
                        null=True,
                        verbose_name="Внешняя ссылка",
                    ),
                ),
                (
                    "is_reported_to_tax",
                    models.BooleanField(
                        default=False,
                        help_text="Отметьте, если транзакция была отправлена в налоговую",
                        verbose_name="Сообщено в налоговую",
                    ),
                ),
                (
                    "reporting_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата, когда транзакция была отправлена в налоговую",
                        null=True,
                        verbose_name="Дата отправки в налоговую",
                    ),
                ),
                (
                    "issue_date",
                    models.DateTimeField(
                        help_text="Дата, когда была инициирована корректировка",
                        verbose_name="Дата инициации",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="Загрузите фото или PDF-файл, подтверждающий транзакцию",
                        null=True,
                        upload_to="order_adjustments/debit/%Y-%m-%d",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "transfer_date",
                    models.DateTimeField(
                        help_text="Дата, когда средства были отправлены клиенту",
                        verbose_name="Дата отправки средств",
                    ),
                ),
                (
                    "account_received_funds",
                    models.ForeignKey(
                        help_text="Выберите банковский счёт, с которого были возвращены средства",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders_debit_adjustments",
                        to="cart.bankaccount",
                        verbose_name="Банковский счёт с которого вернули деньги",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Заказ, к которому относится корректировка",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="debit_adjustments",
                        to="cart.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Сотрудник, который обработал данную транзакцию",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обработано сотрудником",
                    ),
                ),
            ],
            options={
                "verbose_name": "Корректировка (возврат)",
                "verbose_name_plural": "Корректировки (возвраты)",
            },
        ),
        migrations.CreateModel(
            name="OrderProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "discount",
                    models.IntegerField(
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Скидка на продукт",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена продукта"
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта cо скидкой",
                    ),
                ),
                (
                    "tax_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта с налогом",
                    ),
                ),
                (
                    "tax_price_discounted",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена продукта со скидкой и налогом",
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Всего заплаченных налогов",
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="Количество продукта")),
                (
                    "supplier_paid_taxes",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Всего заплаченных налогов за продукт у поставщика",
                    ),
                ),
                (
                    "supplier_vat_rate",
                    models.IntegerField(
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Ставка НДС от поставщика",
                    ),
                ),
                (
                    "supplier_paid_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Заплаченная себестоимость поставщику",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="cart.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="catalogue.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт в заказе",
                "verbose_name_plural": "Продукты в заказе",
            },
        ),
        migrations.CreateModel(
            name="RefundReceipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="В случае если флорист сделал свою работу плохо и мы добились возврата (фото/PDF-файл)",
                        null=True,
                        upload_to="refund_receipts/%Y-%m-%d",
                        verbose_name="Подтверждение возврата от флориста",
                    ),
                ),
                ("issue_date", models.DateTimeField(verbose_name="Дата выдачи")),
                ("receipt_date", models.DateTimeField(verbose_name="Дата поступления")),
                (
                    "refund_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Указано в чеке возврата",
                        max_digits=10,
                        null=True,
                        verbose_name="Сумма возврата",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
                (
                    "account_received_funds",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="refund_receipts",
                        to="cart.bankaccount",
                        verbose_name="Банковский счёт на который вернули деньги",
                    ),
                ),
            ],
            options={
                "verbose_name": "4. Чек возврата от флориста",
                "verbose_name_plural": "4. Чеки возвратов от флористов",
            },
        ),
        migrations.AddField(
            model_name="bill",
            name="refund_receipt",
            field=models.ForeignKey(
                blank=True,
                help_text="В случае если флорист сделал свою работу плохо и мы добились возврата",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bills",
                to="cart.refundreceipt",
                verbose_name="Чек возврата от флориста",
            ),
        ),
    ]
